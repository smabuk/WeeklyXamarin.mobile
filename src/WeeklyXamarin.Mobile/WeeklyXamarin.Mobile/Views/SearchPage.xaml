<?xml version="1.0" encoding="utf-8" ?>
<views:PageBase
    x:Class="WeeklyXamarin.Mobile.Views.SearchPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:fa="clr-namespace:FontAwesome"
    xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
    xmlns:models="clr-namespace:WeeklyXamarin.Core.Models;assembly=WeeklyXamarin.Core"
    xmlns:rainbows="clr-namespace:Xamarin.Forms.DebugRainbows;assembly=Xamarin.Forms.DebugRainbows"
    xmlns:rv="clr-namespace:Sharpnado.MaterialFrame;assembly=Sharpnado.MaterialFrame"
    xmlns:viewmodels="clr-namespace:WeeklyXamarin.Core.ViewModels;assembly=WeeklyXamarin.Core"
    xmlns:views="clr-namespace:WeeklyXamarin.Mobile.Views"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    x:Name="rootPage"
    Title="Search"
    rainbows:DebugRainbow.ShowColors="False"
    x:DataType="viewmodels:SearchViewModel"
    x:TypeArguments="viewmodels:SearchViewModel">

    <ContentPage.Resources>
        <ResourceDictionary>
            <xct:IsNotNullOrEmptyConverter x:Key="IsNotNullOrEmptyConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid RowDefinitions="Auto,Auto,*">
        <Entry
            Margin="20,20,20,0"
            ClearButtonVisibility="WhileEditing"
            IsSpellCheckEnabled="False"
            Placeholder="Enter your search term"
            ReturnCommand="{Binding SearchArticlesCommand}"
            Text="{Binding SearchText}">
            <Entry.Behaviors>
                <xct:UserStoppedTypingBehavior
                    Command="{Binding SearchArticlesCommand}"
                    MinimumLengthThreshold="2"
                    ShouldDismissKeyboardAutomatically="False"
                    StoppedTypingTimeThreshold="1000" />
            </Entry.Behaviors>
        </Entry>
        <!--<Button
                Clicked="SelectCategories_Clicked"
                HorizontalOptions="End"
                Text="⛊" />-->


        <!--<Frame
                Grid.Column="1"
                Margin="20,0"
                Padding="5"
                VerticalOptions="Center">
                <StackLayout Orientation="Horizontal">
                    <Label Text="{Binding SearchCategory.Name}" />
                    <Button
                        Padding="2"
                        Command="{Binding SelectCategoryCommand}"
                        Text="&#10006;" />
                </StackLayout>
            </Frame>-->


        <Grid
            Grid.Row="1"
            Margin="20,0"
            ColumnDefinitions="*,Auto">
            <Picker
                Title="All Categories"
                Grid.ColumnSpan="2"
                ItemDisplayBinding="{Binding Name}"
                ItemsSource="{Binding Categories}"
                SelectedItem="{Binding SearchCategory}"
                Unfocused="Picker_Unfocused" />
            <Button
                Grid.Column="1"
                Padding="0"
                BackgroundColor="Transparent"
                Command="{Binding ClearCategoryCommand}"
                HorizontalOptions="Center"
                IsVisible="{Binding SearchCategory, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                Text="&#10006;"
                TextColor="{AppThemeBinding Light={StaticResource TextLight},
                                            Dark={StaticResource TextDark}}"
                VerticalOptions="Center"
                WidthRequest="40" />
        </Grid>

        <!--<rv:MaterialFrame
            Grid.Row="1"
            Margin="20,0"
            Padding="10,0"
            BackgroundColor="Transparent"
            HasShadow="True">-->

        <!--<xct:Expander Grid.Row="1" IsExpanded="{Binding ShowCategory}">
            <xct:Expander.Header>
                <Grid Margin="20,0">
                    <Label
                        Padding="10,0"
                        Style="{StaticResource SectionTitle}"
                        Text="{Binding SearchCategory.Name, StringFormat='In: {0}'}" />
                    <Image
                        HorizontalOptions="End"
                        Source="{FontImage Glyph={x:Static fa:FontAwesomeIcons.ChevronCircleDown},
                                           FontFamily=FAS,
                                           Size=24,
                                           Color={StaticResource SkyBlueLight}}"
                        VerticalOptions="Center">
                        <Image.Triggers>
                            <DataTrigger
                                Binding="{Binding Source={RelativeSource AncestorType={x:Type xct:Expander}}, Path=IsExpanded}"
                                TargetType="Image"
                                Value="True">
                                <Setter Property="Source" Value="{FontImage Glyph={x:Static fa:FontAwesomeIcons.ChevronCircleUp}, FontFamily=FAS, Size=24, Color={StaticResource Key=SkyBlueLight}}" />
                            </DataTrigger>
                        </Image.Triggers>
                    </Image>
                </Grid>
            </xct:Expander.Header>
            <ScrollView>
                <FlexLayout
                    Margin="0,10"
                    Padding="5,0"
                    AlignContent="SpaceEvenly"
                    AlignItems="Center"
                    BindableLayout.ItemsSource="{Binding Categories}"
                    Direction="Row"
                    JustifyContent="Center"
                    Wrap="Wrap">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate x:DataType="{x:Type models:Category}">
        -->
        <!--<Grid HorizontalOptions="Center"
                                      HeightRequest="20"
                                      Margin="10"
                                      VerticalOptions="Center">-->
        <!--
                            <Frame
                                Margin="5,5"
                                Padding="0"
                                BackgroundColor="Transparent"
                                BorderColor="{Binding Name, Converter={StaticResource categoryToColorConverter}}"
                                CornerRadius="10"
                                HasShadow="False"
                                HorizontalOptions="Fill"
                                VerticalOptions="Fill">
        -->
        <!--<BoxView Color="{Binding Name, Converter={StaticResource categoryToColorConverter}}"/>-->
        <!--
                                <StackLayout Padding="10,2">
                                    <Label
                                        InputTransparent="True"
                                        LineBreakMode="NoWrap"
                                        Style="{StaticResource SearchCategory}"
                                        Text="{Binding Name}"
                                        TextColor="{Binding Name, Converter={StaticResource categoryToColorConverter}}" />
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.SelectCategoryCommand, Source={x:Reference rootPage}}" CommandParameter="{Binding .}" />
                                    </StackLayout.GestureRecognizers>
                                </StackLayout>
                            </Frame>

        -->
        <!--</Grid>-->
        <!--
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>
            </ScrollView>
        </xct:Expander>-->
        <!--</rv:MaterialFrame>-->
        <Grid Grid.Row="2">
            <CollectionView ItemsSource="{Binding Articles}">
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="models:Article">
                        <views:ArticleDataTemplate />
                    </DataTemplate>
                </CollectionView.ItemTemplate>
                <CollectionView.EmptyView>
                    <Label
                        Margin="40"
                        HorizontalTextAlignment="Center"
                        Style="{StaticResource InformationText}"
                        Text="What are you looking for?"
                        VerticalOptions="Fill"
                        VerticalTextAlignment="Center" />
                </CollectionView.EmptyView>
            </CollectionView>

            <Grid IsVisible="False" Style="{StaticResource OverlayBackground}">
                <ActivityIndicator
                    HorizontalOptions="Center"
                    IsRunning="True"
                    VerticalOptions="Center" />
                <Grid.Triggers>
                    <DataTrigger
                        Binding="{Binding CurrentState}"
                        TargetType="Grid"
                        Value="Loading">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>

                </Grid.Triggers>
            </Grid>

            <Grid IsVisible="False" Style="{StaticResource OverlayBackground}">
                <StackLayout VerticalOptions="Center">
                    <Label
                        Margin="40"
                        HorizontalTextAlignment="Center"
                        Style="{StaticResource InformationText}"
                        Text="{Binding SearchResultText}"
                        VerticalOptions="CenterAndExpand" />
                    <lottie:AnimationView
                        x:Name="animationView"
                        Animation="bookmarkanimation.json"
                        AutoPlay="True"
                        HeightRequest="200"
                        HorizontalOptions="FillAndExpand"
                        RepeatMode="Infinite"
                        VerticalOptions="FillAndExpand"
                        WidthRequest="200" />
                </StackLayout>
                <Grid.Triggers>
                    <DataTrigger
                        Binding="{Binding CurrentState}"
                        TargetType="Grid"
                        Value="Empty">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>

                </Grid.Triggers>

            </Grid>

        </Grid>
    </Grid>
</views:PageBase>